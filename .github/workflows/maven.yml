# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Cache
      uses: actions/cache@v3.0.7
      with:
        path: /home/runner/.m2/repository

          key: ${{ runner.os }}-maven-${{ hashFiles(‘**/pom.xml’) }}

          restore-keys: |

              ${{ runner.os }}-maven-

      – name: Setup Java JDK

        uses: actions/setup-java@v1

        with:

    # The Java version to set up. Takes a whole or semver Java version. See examples of supported syntax in the README file

          java-version: 1.8   

      – name: Deploy to CloudHub

        env:

          USERNAME: ${{ secrets.ANYPOINT_USERNAME }}

          PASSWORD: ${{ secrets.ANYPOINT_PASSWORD }}

        run: |

          artifactName=$(ls *.jar | head -1)

          mvn mule:deploy -Dmule.artifact=$artifactName -Danypoint.userName=$USERNAME -Danypoint.password=$PASSWORD -Danypoint.env=”Sandbox” -Danypoint.appName=”DEMO-WORK-1″
